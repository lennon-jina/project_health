<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.health.my.mapper.CommentMapper">

    <!-- 댓글 목록 조회 -->
    <select id="getCommentsByBoardId" parameterType="Long" resultType="com.health.my.dto.CommentDto">
        SELECT 
            C.comment_id AS commentId,
            C.board_id AS boardId,
            C.user_id AS userId,
            U.username,
            U.nickname,
            C.content,
            C.created_at AS createdAt,
            C.updated_at AS updatedAt
        FROM 
            COMMENTS C
        JOIN 
            USERS U ON C.user_id = U.user_id
        WHERE 
            C.board_id = #{boardId}
        ORDER BY 
            C.created_at ASC
    </select>
    
    <!-- 댓글 단일 조회 -->
    <select id="getCommentById" parameterType="Long" resultType="com.health.my.dto.CommentDto">
        SELECT 
            C.comment_id AS commentId,
            C.board_id AS boardId,
            C.user_id AS userId,
            U.username,
            U.nickname,
            C.content,
            C.created_at AS createdAt,
            C.updated_at AS updatedAt
        FROM 
            COMMENTS C
        JOIN 
            USERS U ON C.user_id = U.user_id
        WHERE 
            C.comment_id = #{commentId}
    </select>
    
    <!-- 댓글 추가 -->
    <insert id="insertComment" parameterType="com.health.my.dto.CommentDto">
        INSERT INTO COMMENTS (
            comment_id,
            board_id,
            user_id,
            content,
            created_at,
            updated_at
        ) VALUES (
            SEQ_COMMENTS.NEXTVAL,
            #{boardId},
            #{userId},
            #{content},
            SYSTIMESTAMP,
            SYSTIMESTAMP
        )
    </insert>
    
    <!-- 댓글 수정 -->
    <update id="updateComment" parameterType="com.health.my.dto.CommentDto">
        UPDATE COMMENTS
        SET 
            content = #{content},
            updated_at = SYSTIMESTAMP
        WHERE 
            comment_id = #{commentId}
    </update>
    
    <!-- 댓글 삭제 -->
    <delete id="deleteComment" parameterType="Long">
        DELETE FROM COMMENTS
        WHERE comment_id = #{commentId}
    </delete>
    
    <!-- 게시글의 모든 댓글 삭제 -->
    <delete id="deleteCommentsByBoardId" parameterType="Long">
        DELETE FROM COMMENTS
        WHERE board_id = #{boardId}
    </delete>
    
</mapper>