<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.health.my.mapper.UserMapper">

    <!-- 결과 매핑 -->
    <resultMap id="UserResultMap" type="com.health.my.dto.UserDto">
        <id property="userId" column="user_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="email" column="email"/>
        <result property="nickname" column="nickname"/>
        <result property="profileImage" column="profile_image"/>
        <result property="role" column="role"/>
        <result property="enabled" column="enabled"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- 사용자 등록 -->
    <insert id="insertUser" parameterType="com.health.my.dto.UserDto">
        INSERT INTO USERS (
            user_id, 
            username, 
            password, 
            email, 
            nickname, 
            profile_image, 
            role, 
            enabled, 
            created_at, 
            updated_at
        ) VALUES (
            SEQ_USERS.NEXTVAL, 
            #{username}, 
            #{password}, 
            #{email}, 
            #{nickname}, 
            #{profileImage}, 
            #{role}, 
            #{enabled, jdbcType=NUMERIC}, 
            SYSTIMESTAMP, 
            SYSTIMESTAMP
        )
    </insert>

    <!-- 사용자 ID로 조회 -->
    <select id="findById" resultMap="UserResultMap">
        SELECT 
            user_id, 
            username, 
            password, 
            email, 
            nickname, 
            profile_image, 
            role, 
            enabled, 
            TO_CHAR(created_at, 'YYYY-MM-DD HH24:MI:SS') as created_at, 
            TO_CHAR(updated_at, 'YYYY-MM-DD HH24:MI:SS') as updated_at
        FROM 
            USERS
        WHERE 
            user_id = #{userId}
    </select>

    <!-- 사용자명(아이디)으로 조회 -->
    <select id="findByUsername" resultMap="UserResultMap">
        SELECT 
            user_id, 
            username, 
            password, 
            email, 
            nickname, 
            profile_image, 
            role, 
            enabled, 
            TO_CHAR(created_at, 'YYYY-MM-DD HH24:MI:SS') as created_at, 
            TO_CHAR(updated_at, 'YYYY-MM-DD HH24:MI:SS') as updated_at
        FROM 
            USERS
        WHERE 
            username = #{username}
    </select>

    <!-- 이메일로 조회 -->
    <select id="findByEmail" resultMap="UserResultMap">
        SELECT 
            user_id, 
            username, 
            password, 
            email, 
            nickname, 
            profile_image, 
            role, 
            enabled, 
            TO_CHAR(created_at, 'YYYY-MM-DD HH24:MI:SS') as created_at, 
            TO_CHAR(updated_at, 'YYYY-MM-DD HH24:MI:SS') as updated_at
        FROM 
            USERS
        WHERE 
            email = #{email}
    </select>

    <!-- 사용자 정보 수정 -->
    <update id="updateUser" parameterType="com.health.my.dto.UserDto">
        UPDATE USERS
        SET 
            nickname = #{nickname},
            email = #{email},
            profile_image = CASE 
                WHEN #{profileImage} IS NOT NULL THEN #{profileImage}
                ELSE profile_image
            END,
            updated_at = SYSTIMESTAMP
        WHERE 
            user_id = #{userId}
    </update>

    <!-- 비밀번호 변경 -->
    <update id="updatePassword">
        UPDATE USERS
        SET 
            password = #{password},
            updated_at = SYSTIMESTAMP
        WHERE 
            user_id = #{userId}
    </update>

    <!-- 프로필 이미지 업데이트 -->
    <update id="updateProfileImage">
        UPDATE USERS
        SET 
            profile_image = #{profileImage},
            updated_at = SYSTIMESTAMP
        WHERE 
            user_id = #{userId}
    </update>

</mapper>